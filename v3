-- Load the Zypher UI library
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/teppyboy/RbxScripts/master/Misc/UI_Libraries/Zypher/Library.lua"))()

-- Create the main window
local main = library:CreateMain({
    projName = "Tyrant Hub",
    Resizable = true,
    MinSize = UDim2.new(0,400,0,400),
    MaxSize = UDim2.new(0,750,0,500),
})

-- Create tabs
local catchingCategory = main:CreateCategory("Catching")
local playerCategory = main:CreateCategory("Player")
local miscCategory = main:CreateCategory("Misc")
local infoCategory = main:CreateCategory("Info")
local keybindsCategory = main:CreateCategory("Keybinds")

-- Create Catching tab
local catchingSection = catchingCategory:CreateSection("Catching Features")

-- Variables for Catching tab
local magnetEnabled = false
local autoCatchEnabled = false
local magnetSize = 10 -- Default value for magnet size
local autoCatchRadius = 10 -- Default value for auto-catch radius

-- Magnets
catchingSection:Create(
    "Toggle",
    "Magnets",
    function(state)
        magnetEnabled = state
    end,
    {
        default = false
    }
)

-- Magnet Slider
catchingSection:Create(
    "Slider",
    "Magnet Size",
    function(value)
        magnetSize = value
    end,
    {
        min = 1,
        max = 25,
        default = 10
    }
)

-- Auto-Catch
catchingSection:Create(
    "Toggle",
    "Auto-Catch",
    function(state)
        autoCatchEnabled = state
    end,
    {
        default = false
    }
)

-- Auto-Catch Slider
catchingSection:Create(
    "Slider",
    "Auto-Catch Radius",
    function(value)
        autoCatchRadius = value
    end,
    {
        min = 1,
        max = 25,
        default = 10
    }
)

-- Create Player tab
local playerSection = playerCategory:CreateSection("Player Features")

-- Variables for Player tab
local walkspeedEnabled = false
local jumpPowerEnabled = false
local walkspeedValue = 20
local jumpPowerValue = 50

-- Walkspeed
local walkspeedToggle = playerSection:Create("Toggle", "Walkspeed", function(state)
    if state then
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = walkspeedValue
    else
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
    end
end, { default = false })

local walkspeedSlider = playerSection:Create("Slider", "Walkspeed", function(value)
    walkspeedValue = value
    if walkspeedEnabled then
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = walkspeedValue
    end
end, { min = 20, max = 23, default = 20 })

-- JumpPower
local jumppowerToggle = playerSection:Create("Toggle", "JumpPower", function(state)
    if state then
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = jumpPowerValue
    else
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
    end
end, { default = false })

local jumppowerSlider = playerSection:Create("Slider", "JumpPower", function(value)
    jumpPowerValue = value
    if jumpPowerEnabled then
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = jumpPowerValue
    end
end, { min = 50, max = 60, default = 50 })

-- Create Misc tab
local miscSection = miscCategory:CreateSection("Misc Features")

-- Ball Landing Prediction
local ballLandingPredictionEnabled = false

miscSection:Create(
    "Toggle",
    "Ball Landing Prediction",
    function(state)
        ballLandingPredictionEnabled = state
        if state then
            startPrediction()
        else
            stopPrediction()
        end
    end,
    {
        default = false
    }
)

-- Ball Landing Prediction Functions
local function beamProjectile(g, v0, x0, t1)
    local c = 0.5 * 0.5 * 0.5
    local p3 = 0.5 * g * t1 * t1 + v0 * t1 + x0
    local p2 = p3 - (g * t1 * t1 + v0 * t1) / 3
    local p1 = (c * g * t1 * t1 + 0.5 * v0 * t1 + x0 - c * (x0 + p3)) / (3 * c) - p2

    local curve0 = (x0 - p3).magnitude
    local curve1 = (p2 - p3).magnitude

    local b = (x0 - p3).unit
    local r1 = (p1 - x0).unit
    local u1 = r1:Cross(b).unit
    local r2 = (p2 - p3).unit
    local u2 = r2:Cross(b).unit
    b = u1:Cross(r1).unit

    local cf1 = CFrame.new(
        x0.x, x0.y, x0.z,
        r1.x, u1.x, b.x,
        r1.y, u1.y, b.y,
        r1.z, u1.z, b.z
    )

    local cf2 = CFrame.new(
        p3.x, p3.y, p3.z,
        r2.x, u2.x, b.x,
        r2.y, u2.y, b.y,
        r2.z, u2.z, b.z
    )

    return curve0, -curve1, cf1, cf2
end

local predictionColor = Color3.fromRGB(255, 255, 255)
local predictionBeam

local function startPrediction()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local RunService = game:GetService("RunService")

    local function onBallAdded(b)
        if b.Name == "Football" and b:IsA("BasePart") then
            task.wait()
            local vel = b.Velocity
            local pos = b.Position
            local c0, c1, cf1, cf2 = beamProjectile(Vector3.new(0, -28, 0), vel, pos, 10)
            predictionBeam = Instance.new("Beam")
            local a0 = Instance.new("Attachment")
            local a1 = Instance.new("Attachment")
            predictionBeam.Color = ColorSequence.new(predictionColor)
            predictionBeam.Transparency = NumberSequence.new(0, 0)
            predictionBeam.CurveSize0 = c0
            predictionBeam.CurveSize1 = c1
            predictionBeam.Name = "Hitbox"
            predictionBeam.Parent = workspace.Terrain
            predictionBeam.Transparency = NumberSequence.new({
                NumberSequenceKeypoint.new(0, 1),
                NumberSequenceKeypoint.new(0.01, 0),
                NumberSequenceKeypoint.new(1, 0),
                NumberSequenceKeypoint.new(1, 0.01),
            })
            predictionBeam.Segments = 1750
            a0.Parent = workspace.Terrain
            a1.Parent = workspace.Terrain
            a0.CFrame = a0.Parent.CFrame:Inverse() * cf1
            a1.CFrame = a1.Parent.CFrame:Inverse() * cf2
            predictionBeam.Attachment0 = a0
            predictionBeam.Attachment1 = a1
            predictionBeam.Width0 = 1
            predictionBeam.Width1 = 1

            local landedConnection
            landedConnection = RunService.Heartbeat:Connect(function()
                if b.Velocity.magnitude < 1 then  
                    predictionBeam:Destroy()
                    a0:Destroy()
                    a1:Destroy()
                    landedConnection:Disconnect()
                end
            end)

            repeat task.wait() until b.Parent ~= workspace
            predictionBeam:Destroy()
            a0:Destroy()
            a1:Destroy()
        end
    end

    workspace.ChildAdded:Connect(onBallAdded)
end

local function stopPrediction()
    if predictionBeam then
        predictionBeam:Destroy()
        predictionBeam = nil
    end
end

-- Update Magnet Status
local function updateMagnetStatus()
    local player = game:GetService("Players").LocalPlayer
    local character = player.Character

    if character then
        local ball = workspace:FindFirstChild("Football")
        
        if ball then
            if magnetEnabled then
                if magnetDelayEnabled then
                    wait(magnetDelay)
                end
                ball.Size = Vector3.new(magnetSize, magnetSize, magnetSize)

                -- Extend the ball's hitbox to make it easier to catch
                local hitboxSize = magnetSize * 1.5  -- Increase hitbox size factor
                local ballCFrame = ball.CFrame
                local ballHitbox = Instance.new("Part")
                ballHitbox.Size = Vector3.new(hitboxSize, hitboxSize, hitboxSize)
                ballHitbox.CFrame = ballCFrame
                ballHitbox.Transparency = 0.5
                ballHitbox.Anchored = true
                ballHitbox.CanCollide = false
                ballHitbox.Parent = workspace
                game:GetService("Debris"):AddItem(ballHitbox, 0.1) -- Remove after a short delay

                local ballPos = ball.Position
                local playerPos = character:WaitForChild("HumanoidRootPart").Position
                local distance = (ballPos - playerPos).magnitude

                if distance < autoCatchRadius then
                    ball.Velocity = Vector3.new(0, 0, 0)
                    ball.CFrame = character:WaitForChild("HumanoidRootPart").CFrame
                    fireclickdetector(ball:FindFirstChildOfClass("ClickDetector"))
                end
            end
        end
    end
end

-- Update function every frame
game:GetService("RunService").RenderStepped:Connect(updateMagnetStatus)

-- Info tab
local infoSection = infoCategory:CreateSection("Script Info")

infoSection:Create(
    "Label",
    "Owner Name: Ozuya"
)

infoSection:Create(
    "Label",
    "Game Name: Football Fusion 2"
)

-- Keybinds
local keybindsSection = keybindsCategory:CreateSection("Keybinds")

keybindsSection:Create(
    "Keybind",
    "Toggle UI",
    Enum.KeyCode.F9,
    function()
        main:Toggle()
    end
)

-- Final initialization
main:Init()
