-- Load Orion UI from the URL
local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()
local Window = OrionLib:MakeWindow({Name = "Custom UI", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

-- Create a basic UI
local function createBasicUI()
    local Tab = Window:MakeTab({
        Name = "Main",
        Icon = "rbxassetid://4483345998", -- Replace with appropriate icon ID
        PremiumOnly = false
    })

    Tab:AddSection({Name = "Controls"})

    Tab:AddToggle({
        Name = "Walkspeed",
        Default = false,
        Callback = function(value)
            _G.Walkspeed = value
            if value then
                startMovement()
            else
                stopMovement()
            end
        end
    })

    Tab:AddSlider({
        Name = "Walkspeed Value",
        Min = 0,
        Max = 0.45,
        Default = 0,
        Color = Color3.fromRGB(255, 255, 255),
        Increment = 0.01,
        ValueName = "Speed",
        Callback = function(value)
            _G.WalkspeedValue = value
        end
    })

    Tab:AddToggle({
        Name = "JumpPower",
        Default = false,
        Callback = function(value)
            _G.JumpPower = value
            if value then
                startJumpPower()
            else
                stopJumpPower()
            end
        end
    })

    Tab:AddSlider({
        Name = "JumpPower Value",
        Min = 50,
        Max = 300,
        Default = 50,
        Color = Color3.fromRGB(255, 255, 255),
        Increment = 1,
        ValueName = "Power",
        Callback = function(value)
            _G.JumpPowerValue = value
        end
    })
end

createBasicUI()

-- Anti-cheat bypass setup
local function setupAntiCheatBypass()
    -- Example bypass: Hide script sources or modify game functions
    -- This is a simplified placeholder; real implementation depends on the specific anti-cheat system
    local oldIndex = debug.getinfo
    local oldGetGC = getgc
    local function newGetGC(...)
        local result = {oldGetGC(...)}
        -- Filter out suspicious functions or data from the GC
        return result
    end

    hookfunction(debug.getinfo, function(...)
        local info = oldIndex(...)
        if info and info.source and string.find(info.source, "PlayerModule") then
            return nil
        end
        return oldIndex(...)
    end)

    hookfunction(getgc, newGetGC)
end

setupAntiCheatBypass()

-- Walkspeed and JumpPower settings
local _G = _G or {}
_G.Walkspeed = false
_G.WalkspeedValue = 0.30
_G.JumpPower = false
_G.JumpPowerValue = 50

local player = game:GetService("Players").LocalPlayer

local function startMovement()
    if _G.Walkspeed then
        local moveConnection = task.spawn(function()
            while _G.Walkspeed do
                local character = player.Character
                if character then
                    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                    local humanoid = character:FindFirstChild("Humanoid")
                    if humanoidRootPart and humanoid then
                        humanoidRootPart.CFrame = humanoidRootPart.CFrame + humanoid.MoveDirection * _G.WalkspeedValue
                    end
                end
                task.wait()
            end
        end)
    end
end

local function stopMovement()
    if _G.Walkspeed then
        _G.Walkspeed = false
        -- Assuming moveConnection is globally accessible, or otherwise manage it properly
    end
end

local function startJumpPower()
    if _G.JumpPower then
        local jumpConnection = task.spawn(function()
            while _G.JumpPower do
                local character = player.Character
                if character then
                    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                    local humanoid = character:FindFirstChild("Humanoid")
                    if humanoidRootPart and humanoid then
                        if humanoid:GetState() == Enum.HumanoidStateType.Jumping then
                            humanoidRootPart.CFrame = humanoidRootPart.CFrame + Vector3.new(0, _G.JumpPowerValue / 50, 0)
                        end
                    end
                end
                task.wait()
            end
        end)
    end
end

local function stopJumpPower()
    if _G.JumpPower then
        _G.JumpPower = false
        -- Assuming jumpConnection is globally accessible, or otherwise manage it properly
    end
end

-- Event connections for character changes
player.CharacterAdded:Connect(function(character)
    character:WaitForChild("HumanoidRootPart")
    if _G.Walkspeed then
        startMovement()
    end
    if _G.JumpPower then
        startJumpPower()
    end
end)

-- Initialize the character if already present
if player.Character then
    player.CharacterAdded(player.Character)
end
